Package simpleAdder; 
     
Helpers

  a = 'a' | 'A' ;
  b = 'b' | 'B' ;
  c = 'c' | 'C' ; 
  d = 'd' | 'D' ;
  e = 'e' | 'E' ;
  f = 'f' | 'F' ;
  g = 'g' | 'G' ;
  h = 'h' | 'H' ;
  i = 'i' | 'I' ;
  j = 'j' | 'J' ;
  k = 'k' | 'K' ;
  l = 'l' | 'L' ;
  m = 'm' | 'M' ;
  n = 'n' | 'N' ;
  o = 'o' | 'O' ;
  p = 'p' | 'P' ;
  q = 'q' | 'Q' ;
  r = 'r' | 'R' ;
  s = 's' | 'S' ;
  t = 't' | 'T' ;
  u = 'u' | 'U' ;
  v = 'v' | 'V' ;
  w = 'w' | 'W' ;
  x = 'x' | 'X' ;
  y = 'y' | 'Y' ;
  z = 'z' | 'Z' ;
  
  letra = [['a' .. 'z'] + ['A' .. 'Z']];
  digito = ['0' .. '9'];     

  //caracteres vazios
  tab = 9;
  cr = 13;
  lf = 10;
  espaco = ' ';

Tokens

 
  
  //operadores aritméticos
  
  adicao = '+';
  subtracao = '-';
  multiplicacao = '*';
  divisao = '/';
  restodivisao = 'mod';
  
  //operadores relacionais
  
  menor = '<';
  maior = '>';
  menorigual = '<=';
  maiorigual = '>=';
  igual = '=';
  diferente = '<>';
  
  //operadores lógicos
  
  not = 'not';
  and = 'and';
  or = 'or';
  
  //separadores
  
  virgula = ',';
  doispontos = ':';
  pontoevirgula = ';';
  ponto = '.';
  pontoponto = '..';
  atribuicao = ':=';
  abreparenteses = '(';
  fechaparenteses = ')';
  abrecolchetes = '[';
  fechacolchetes = ']';
  
  identificador = letra (letra | digito)*;
  numero = (digito(digito)*) ('.'(digito(digito)*)|espaco);  //ESSE espaco TÁ ERRADO
  
  //espaços vazios
  vazio = espaco | cr lf | cr | lf | tab ;

Ignored Tokens
 vazio;
            
